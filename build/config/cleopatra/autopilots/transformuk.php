<?php

/*************************************
 *      Generated Autopilot file      *
 *     ---------------------------    *
 *Autopilot Generated By Dapperstrano *
 *     ---------------------------    *
 *************************************/

Namespace Core ;

class AutoPilotConfigured extends AutoPilot {

    public $steps ;

    public function __construct() {
        $this->setSteps();
        // $this->setSSHData();
    }

    /* Steps */
    private function setSteps() {

        $this->steps =
            array(
                array ( "Console" => array( "log" =>
                    array( "console-log-message" => "Hiya Transform! Lets automate testing on your home page"),
                ) ),
                array ( "Console" => array( "log" =>
                    array( "console-log-message" => "We'll install Testingkamen as we need it later"),
                ) ),
                array ( "Testingkamen" => array( "ensure" =>
                    array( "guess" => true ),
                ) ),
                array ( "Console" => array( "log" =>
                    array( "console-log-message" => "Then lets ensure Java is installed"),
                ) ),
                array ( "Java" => array( "ensure" =>
                    array( "guess" => true ),
                ) ),
                array ( "Console" => array( "log" =>
                    array( "console-log-message" => "Then lets install Selenium Server"),
                ) ),
                array ( "SeleniumServer" => array( "ensure" =>
                    array( "guess" => true ),
                ) ),
                array ( "Console" => array( "log" =>
                    array( "console-log-message" => "Then lets start the Selenium Server"),
                ) ),
                array ( "RunCommand" => array( "install" =>
                    array( "command" => "java -jar /opt/selenium/selenium-server.jar >/dev/null 2>&1 </dev/null",
                           "run-as-user" => "",
                           "background" => true ),
                ) ),
                array ( "Console" => array( "log" =>
                    array( "console-log-message" => "Then lets make sure Firefox is installed"),
                ) ),
                array ( "PackageManager" => array( "pkg-ensure" =>
                    array( "packager-name" => "Apt", "package-name" => "firefox" ),
                ) ),
                array ( "Console" => array( "log" =>
                    array( "console-log-message" => "Then lets make sure Behat is installed"),
                ) ),
                array ( "PackageManager" => array( "pkg-ensure" =>
                array( "packager-name" => "Apt", "package-name" => "curl" ),
                ) ),
                array ( "Behat" => array( "ensure" =>
                    array( "guess" => true),
                ) ),
                array ( "Console" => array( "log" =>
                    array( "console-log-message" => "Wahey, we have our custom, PHP Code managed configuration for Behat Testing!"),
                ) ),
                array ( "Console" => array( "log" =>
                    array( "console-log-message" => "Now, let's execute our Behat Test Suite for the Transform Site"),
                ) ),
                array ( "RunCommand" => array( "install" =>
                    array( "command" => "testingkamen behat execute --yes",
                           "run-as-user" => "",
                           "background" => "", ),
                ) ),
                array ( "Console" => array( "log" =>
                    array( "console-log-message" => $this->getEndingSpeech(), ),
                ) ),
            );

    }


    private function getEndingSpeech() {
        $speech = "And there it is... You have just seen complete Systems Automation, Configuration Management by
            Code (in PHP might I add), Test Automation Management, Selenium based Functional Testing in Behat/PHP...
            All in an afternoon. Hire meeeeeeee!" ;

        return $speech ;
    }

}
